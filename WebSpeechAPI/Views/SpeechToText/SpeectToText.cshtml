@model Models.SpeechtoText

@{
    ViewBag.Title = "SpeectToText";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render(Url.Content("~/Content/bootstrap.css"))
<style>
    * {
        font-family: Verdana, Arial, sans-serif;
    }

    a:link {
        color: #000;
        text-decoration: none;
    }

    a:visited {
        color: #000;
    }

    a:hover {
        color: #33F;
    }

    .button {
        background-color: transparent;
        background: -webkit-linear-gradient(top,#008dfd 0,#0370ea 100%);
        border: 1px solid #076bd2;
        border-radius: 3px;
        color: #fff;
        display: none;
        font-size: 13px;
        font-weight: bold;
        line-height: 1.3;
        padding: 8px 25px;
        text-align: center;
        text-shadow: 1px 1px 1px #076bd2;
        letter-spacing: normal;
    }

    .center {
        padding: 10px;
        text-align: center;
    }

    .final {
        color: black;
        padding-right: 3px;
    }

    .interim {
        color: gray;
    }

    .info {
        font-size: 14px;
        text-align: center;
        color: #777;
        display: none;
    }

    .right {
        float: right;
    }

    .sidebyside {
        display: inline-block;
        width: 45%;
        min-height: 40px;
        text-align: left;
        vertical-align: top;
    }

    #headline {
        font-size: 40px;
        font-weight: 300;
    }

    #info {
        font-size: 20px;
        text-align: center;
        color: #777;
        visibility: hidden;
    }

    #results {
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        padding: 15px;
        text-align: left;
        min-height: 150px;
    }

    button {
        background-color: transparent;
    }
</style>

<div class="container">
    <header class="fixed-top">
        <nav class="row" id="navigation">
            <table class="header">
                <tbody>
                    <tr>
                        <!-- logo -->
                        <td class="text-center pc" id="logo-area">
                            <p class="logo">
                                <a href="/" draggable="false"><h2>Speech To Text</h2></a><br>
                            </p>
                        </td>
                        <td class="td-dummy pc"></td>
                        <!-- Btn Area -->
                        <td id="btn-area" nowrap="">
                            <button id="btnStart" onclick="startButton(event)">
                                <img id="imgStart" src="/images/mic.gif" alt="マイク" draggable="false">
                            </button>
                            <button id="btnUpload" onclick="document.getElementById('upFile').click();">
                                <img src="/images/upload.png" alt="音声ファイル呼出し" draggable="false">
                            </button>
                            <button id="btnStop" onclick="stopButton(event)">
                                <img id="imgStop" src="/images/stop_disabled.png" alt="音声ファイル呼出し" draggable="false" style="width:50px;height:50px;">
                            </button>
                            <button id="btnSave">
                                <img src="/images/download.png" alt="音声ファイル保存" draggable="false">
                            </button>
                        </td>
                        <!-- Play control -->
                        <td id="play-control" class="pc">
                            <table>
                                <tbody>
                                    <tr>
                                        <td>
                                            <audio controls style="display:none;"></audio>
                                            <audio id="adioPlay" controls></audio>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td colspan="5" id="td-audio-file-name"><p id="audio-file-name">&nbsp;</p></td>
                                    </tr>
                                </tbody>
                            </table>
                        </td>
                        <!-- Equalizer -->
                        <td id="equalizer" class="pc">
                            <canvas id="canvas"></canvas>
                        </td>
                        <td style="width:20%;min-width:4%">&nbsp;</td>
                        <td id="signup-area">
                            <a href="#" id="signup" alt="本登録" draggable="false">&nbsp;</a>
                        </td>
                    </tr>
                </tbody>
            </table>
        </nav>
    </header>
    <div>
        <div id="div_language">
            <span style="font-weight: bold;">Language Types :</span>
            <select id="select_language"></select>
        </div>
        <input type="file" id="upFile" style="display: none;" name="uploadFile" accept=".wma, .mp3" />
    </div>
    <div id="info">
        <p id="info_start">Click on the microphone icon and begin speaking.</p>
        <p id="info_speak_now">Speak now.</p>
        <p id="info_no_speech">
            No speech was detected. You may need to adjust your
            <a href="//support.google.com/chrome/bin/answer.py?hl=en&amp;answer=1407892">
                microphone settings
            </a>.
        </p>
        <p id="info_no_microphone" style="display:none">
            No microphone was found. Ensure that a microphone is installed and that
            <a href="//support.google.com/chrome/bin/answer.py?hl=en&amp;answer=1407892">
                microphone settings
            </a> are configured correctly.
        </p>
        <p id="info_allow">Click the "Allow" button above to enable your microphone.</p>
        <p id="info_denied">Permission to use microphone was denied.</p>
        <p id="info_blocked">
            Permission to use microphone is blocked. To change,
            go to chrome://settings/contentExceptions#media-stream
        </p>
        <p id="info_upgrade">
            Web Speech API is not supported by this browser.
            Upgrade to <a href="//www.google.com/chrome">Chrome</a>
            version 25 or later.
        </p>
    </div>
    <div id="results">
        <span id="final_span" class="final"></span>
        <span id="interim_span" class="interim"></span>
        <p>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        var stream;
        $(document).ready(function () {
            let audioIN = { audio: true };
            navigator.mediaDevices.getUserMedia(audioIN)
                .then(function (mediaStreamObj) {
                    stream = new MediaRecorder(mediaStreamObj);
                    let audio = document.querySelector('audio');
                    if ("srcObject" in audio) {
                        audio.srcObject = mediaStreamObj;
                    }
                    else {
                        audio.src = window.URL.createObjectURL(mediaStreamObj);
                    }

                    audio.onloadedmetadata = function (ev) {
                        //audio.play();
                    };

                    stream.ondataavailable = function (ev) {
                        debugger;
                        dataArray.push(ev.data);
                    }

                    let dataArray = [];
                    stream.onstop = function (ev) {
                        debugger;
                        let playAudio = document.getElementById('adioPlay'); 
                        let audioData = new Blob(dataArray, { 'type': 'audio/mp3;' });
                        dataArray = [];
                        let audioSrc = window.URL.createObjectURL(audioData);
                        playAudio.src = audioSrc;
                    }
                })
                .catch(function (err) {
                    console.log(err.name, err.message);
                });

            $("#btnStop").attr("disabled", "disabled");
            $("#btnSave").click(function () {
                if (recognizing) {
                    recognizing = false;
                    recognition.stop();
                }
                downloadToFile($("#final_span").text(), 'ResultFile.txt', 'text/plain');
            });
        })

        var langs =
                [['United States', ['en-US']],
                ['United Kingdom', ['en-GB']],
                ['日本語', ['ja-JP']]];

        for (var i = 0; i < langs.length; i++) {
            select_language.options.add(new Option(langs[i][0], langs[i][1]));
        }
        select_language.selectedIndex = 0;
        showInfo('info_start');

        var create_email = false;
        var final_transcript = '';
        var recognizing = false;
        var ignore_onend;
        var start_timestamp;
        if (!('webkitSpeechRecognition' in window)) {
            upgrade();
        } else {
            btnStart.style.display = 'inline-block';
            var recognition = new webkitSpeechRecognition();
            recognition.continuous = true;
            recognition.interimResults = true;

            recognition.onstart = function () {
                recognizing = true;
                showInfo('info_speak_now');
                imgStart.src = '/images/mic-animate.gif';
            };

            recognition.onerror = function (event) {
                if (event.error == 'no-speech') {
                    imgStart.src = '/images/mic.gif';
                    showInfo('info_no_speech');
                    ignore_onend = true;
                }
                if (event.error == 'audio-capture') {
                    imgStart.src = '/images/mic.gif';
                    showInfo('info_no_microphone');
                    ignore_onend = true;
                }
                if (event.error == 'not-allowed') {
                    if (event.timeStamp - start_timestamp < 100) {
                        showInfo('info_blocked');
                    } else {
                        showInfo('info_denied');
                    }
                    ignore_onend = true;
                }
            };

            recognition.onend = function () {
                recognizing = false;
                if (ignore_onend) {
                    return;
                }
                imgStart.src = '/images/mic.gif';
                if (!final_transcript) {
                    showInfo('info_start');
                    return;
                }
                showInfo('');
                if (window.getSelection) {
                    window.getSelection().removeAllRanges();
                    var range = document.createRange();
                    range.selectNode(document.getElementById('final_span'));
                    window.getSelection().addRange(range);
                }
                if (create_email) {
                    create_email = false;
                    createEmail();
                }
            };

            recognition.onresult = function (event) {
                var interim_transcript = '';
                for (var i = event.resultIndex; i < event.results.length; ++i) {
                    if (event.results[i].isFinal) {
                        final_transcript += event.results[i][0].transcript;
                    } else {
                        interim_transcript += event.results[i][0].transcript;
                    }
                }
                final_transcript = capitalize(final_transcript);
                final_span.innerHTML = linebreak(final_transcript);
                interim_span.innerHTML = linebreak(interim_transcript);
                if (final_transcript || interim_transcript) {
                    showButtons('inline-block');
                }
            };
        }

        function upgrade() {
            btnStart.style.visibility = 'hidden';
            showInfo('info_upgrade');
        }

        var two_line = /\n\n/g;
        var one_line = /\n/g;
        function linebreak(s) {
            return s.replace(two_line, '<p></p>').replace(one_line, '<br>');
        }

        var first_char = /\S/;
        function capitalize(s) {
            return s.replace(first_char, function (m) { return m.toUpperCase(); });
        }

        function createEmail() {
            var n = final_transcript.indexOf('\n');
            if (n < 0 || n >= 80) {
                n = 40 + final_transcript.substring(40).indexOf(' ');
            }
            var subject = encodeURI(final_transcript.substring(0, n));
            var body = encodeURI(final_transcript.substring(n + 1));
            window.location.href = 'mailto:?subject=' + subject + '&body=' + body;
        }

        function emailButton() {
            if (recognizing) {
                create_email = true;
                recognizing = false;
                recognition.stop();
            } else {
                createEmail();
            }
            showInfo('');
        }

        function startButton(event) {
            final_transcript = '';
            recognition.lang = select_language.value;
            recognition.start();
            ignore_onend = false;
            final_span.innerHTML = '';
            interim_span.innerHTML = '';
            imgStart.src = '/images/mic-slash.gif';
            imgStop.src = '/images/stop_enabled.gif'
            showInfo('info_allow');
            showButtons('none');
            start_timestamp = event.timeStamp;
            $("#btnStop").removeAttr("disabled");
            $("#btnStart").attr("disabled", "disabled");
            stream.start();
        }

        function stopButton(event) {
            stream.stop();
            if (recognizing) {
                recognition.stop();
            }
            $("#btnStart").removeAttr("disabled");
            imgStart.src = '/images/mic.gif'
            $("#btnStop").attr("disabled", "disabled");
            imgStop.src = '/images/stop_disabled.png';
        }

        function showInfo(s) {
            if (s) {
                for (var child = info.firstChild; child; child = child.nextSibling) {
                    if (child.style) {
                        child.style.display = child.id == s ? 'inline' : 'none';
                    }
                }
                info.style.visibility = 'visible';
            } else {
                info.style.visibility = 'hidden';
            }
        }

        var current_style;
        function showButtons(style) {
            if (style == current_style) {
                return;
            }
            current_style = style;
        }

        const downloadToFile = (content, filename, contentType) => {
            const a = document.createElement('a');
            const file = new Blob([content], { type: contentType });

            a.href = URL.createObjectURL(file);
            a.download = filename;
            a.click();

            URL.revokeObjectURL(a.href);
        };

        function RecordAudio(mediaStreamObj) {
            debugger;
        }
    </script>
}

<script type="text/javascript" src="~/Scripts/jquery-3.4.1.js"></script>
